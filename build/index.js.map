{"version":3,"file":"index.js","mappings":"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","sources":["webpack://editor-curation-examples/./src/examples/block-filters/blocks-register-block-type.js","webpack://editor-curation-examples/./src/examples/editor-filters/block-editor-use-setting-before.js","webpack://editor-curation-examples/./src/examples/misc-curations.js","webpack://editor-curation-examples/./src/examples/notes-demo/index.js","webpack://editor-curation-examples/external window [\"wp\",\"blocks\"]","webpack://editor-curation-examples/external window [\"wp\",\"data\"]","webpack://editor-curation-examples/external window [\"wp\",\"domReady\"]","webpack://editor-curation-examples/external window [\"wp\",\"hooks\"]","webpack://editor-curation-examples/webpack/bootstrap","webpack://editor-curation-examples/webpack/runtime/compat get default export","webpack://editor-curation-examples/webpack/runtime/define property getters","webpack://editor-curation-examples/webpack/runtime/hasOwnProperty shorthand","webpack://editor-curation-examples/webpack/runtime/make namespace object","webpack://editor-curation-examples/./src/index.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { addFilter } from '@wordpress/hooks';\n\n/**\n * Adds border support to Column, Heading, and Paragraph blocks.\n *\n * @see https://nickdiego.com/how-to-modify-block-supports-using-client-side-filters/\n *\n * @param {Object} settings - The original block settings.\n * @param {string} name     - The name of the block.\n *\n * @return {Object} The modified block settings with added border support.\n */\nfunction addBorderSupport( settings, name ) {\n\n\t// Bail if the examples are not enabled.\n\tif ( ! window.enableBlockFilters ) {\n\t\treturn settings;\n\t}\n\n\t// Bail early if the block does not have supports.\n\tif ( ! settings?.supports ) {\n\t\treturn settings;\n\t}\n\n\t// Only apply to Column, Heading, and Paragraph blocks.\n\tif (\n\t\tname === 'core/column' ||\n\t\tname === 'core/heading' ||\n\t\tname === 'core/paragraph'\n\t) {\n\t\treturn Object.assign( {}, settings, {\n\t\t\tsupports: Object.assign( settings.supports, {\n\t\t\t\t__experimentalBorder: {\n\t\t\t\t\tcolor: true,\n\t\t\t\t\tstyle: true,\n\t\t\t\t\twidth: true,\n\t\t\t\t\tradius: true,\n\t\t\t\t\t__experimentalDefaultControls: {\n\t\t\t\t\t\tcolor: false,\n\t\t\t\t\t\tstyle: false,\n\t\t\t\t\t\twidth: false,\n\t\t\t\t\t\tradius: false,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t} ),\n\t\t} );\n\t}\n\n\treturn settings;\n}\n\naddFilter(\n\t'blocks.registerBlockType',\n\t'modify-block-supports/add-border-support',\n\taddBorderSupport\n);\n\n/**\n * Modifies the default typography settings for blocks with typography support.\n *\n * @see https://nickdiego.com/how-to-modify-block-supports-using-client-side-filters/\n *\n * @param {Object} settings - The original block settings.\n *\n * @return {Object} The modified block settings with updated typography defaults.\n */\nfunction modifyTypographyDefaults( settings ) {\n\n\t// Bail if the examples are not enabled.\n\tif ( ! window.enableBlockFilters ) {\n\t\treturn settings;\n\t}\n\n\t// Only apply to blocks with typography support.\n\tif ( settings?.supports?.typography ) {\n\t\treturn Object.assign( {}, settings, {\n\t\t\tsupports: Object.assign( settings.supports, {\n\t\t\t\ttypography: Object.assign( settings.supports.typography, {\n\t\t\t\t\t__experimentalDefaultControls: {\n\t\t\t\t\t\tfontAppearance: true,\n\t\t\t\t\t\tfontSize: true,\n\t\t\t\t\t},\n\t\t\t\t} ),\n\t\t\t} ),\n\t\t} );\n\t}\n\n\treturn settings;\n}\n\naddFilter(\n\t'blocks.registerBlockType',\n\t'modify-block-supports/modify-typography-defaults',\n\tmodifyTypographyDefaults\n);\n","/**\n * WordPress dependencies\n */\nimport { select } from '@wordpress/data';\nimport { addFilter } from '@wordpress/hooks';\n\n/**\n * Restrict the spacing options for Column blocks to pixels.\n *\n * @see https://developer.wordpress.org/news/2023/05/curating-the-editor-experience-with-client-side-filters/\n *\n * @param {any}    settingValue The current value of the block setting.\n * @param {string} settingName  The name of the block setting to modify.\n * @param {string} clientId     The unique identifier for the block in the client.\n * @param {string} blockName    The name of the block type.\n *\n * @return {any} Returns the modified setting value or the original setting value.\n */\nfunction restrictColumnSpacingSettings(\n\tsettingValue,\n\tsettingName,\n\tclientId, // eslint-disable-line\n\tblockName\n) {\n\t// Bail if the examples are not enabled.\n\tif ( ! window.enableEditorFilters ) {\n\t\treturn settingValue;\n\t}\n\n\tif ( blockName === 'core/column' && settingName === 'spacing.units' ) {\n\t\treturn [ 'px' ];\n\t}\n\t\n\treturn settingValue;\n}\n\naddFilter(\n\t'blockEditor.useSetting.before',\n\t'editor-curation-examples/useSetting.before/column-spacing',\n\trestrictColumnSpacingSettings\n);\n\n/**\n * If a 'core/heading' is an H3-H6, disable most typography settings and\n * restrict the available font sizes.\n *\n * @see https://developer.wordpress.org/news/2023/05/curating-the-editor-experience-with-client-side-filters/\n *\n * @param {any}    settingValue The current value of the block setting.\n * @param {string} settingName  The name of the block setting to modify.\n * @param {string} clientId     The unique identifier for the block in the client.\n * @param {string} blockName    The name of the block type.\n *\n * @return {any} Returns the modified setting value or the original setting value.\n */\nfunction restrictHeadingTypographySettings(\n\tsettingValue,\n\tsettingName,\n\tclientId,\n\tblockName\n) {\n\t// Bail if the examples are not enabled.\n\tif ( ! window.enableEditorFilters ) {\n\t\treturn settingValue;\n\t}\n\n\tif ( blockName === 'core/heading' ) {\n\t\tconst { getBlockAttributes } = select( 'core/block-editor' );\n\n\t\t// Determine the level of the block based on its client id.\n\t\tconst headingLevel = getBlockAttributes( clientId )?.level ?? 0;\n\n\t\t// Modify these block settings.\n\t\tconst modifiedBlockSettings = {\n\t\t\t'typography.customFontSize': false,\n\t\t\t'typography.fontStyle': false,\n\t\t\t'typography.fontWeight': false,\n\t\t\t'typography.letterSpacing': false,\n\t\t\t'typography.lineHeight': false,\n\t\t\t'typography.textDecoration': false,\n\t\t\t'typography.textTransform': false,\n\t\t\t'typography.fontSizes': [\n\t\t\t\t{\n\t\t\t\t\tfluid: {\n\t\t\t\t\t\tmin: '1rem',\n\t\t\t\t\t\tmax: '1.125rem',\n\t\t\t\t\t},\n\t\t\t\t\tsize: '1.125rem',\n\t\t\t\t\tslug: 'medium',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfluid: {\n\t\t\t\t\t\tmin: '1.75rem',\n\t\t\t\t\t\tmax: '1.875rem',\n\t\t\t\t\t},\n\t\t\t\t\tsize: '1.75rem',\n\t\t\t\t\tslug: 'large',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfluid: false,\n\t\t\t\t\tsize: '2.25rem',\n\t\t\t\t\tslug: 'x-large',\n\t\t\t\t},\n\t\t\t],\n\t\t\t// Add additional block settings here.\n\t\t};\n\n\t\t// Only apply setting modifications to H3-H6.\n\t\tif (\n\t\t\theadingLevel >= 3 &&\n\t\t\tmodifiedBlockSettings.hasOwnProperty( settingName )\n\t\t) {\n\t\t\treturn modifiedBlockSettings[ settingName ];\n\t\t}\n\t}\n\n\treturn settingValue;\n}\n\naddFilter(\n\t'blockEditor.useSetting.before',\n\t'editor-curation-examples/useSetting.before/heading-typography',\n\trestrictHeadingTypographySettings\n);\n\n/**\n * If the user doesn't have permission to update settings (Editors,\n * Authors, etc.), disable the specified block settings when editing\n * the specified post types.\n *\n * @see https://developer.wordpress.org/news/2023/05/curating-the-editor-experience-with-client-side-filters/\n *\n * @param {any}    settingValue The current value of the block setting.\n * @param {string} settingName  The name of the block setting to modify.\n * @param {string} clientId     The unique identifier for the block in the client.\n * @param {string} blockName    The name of the block type.\n *\n * @return {any} Returns the modified setting value or the original setting value.\n */\nfunction restrictBlockSettingsByUserPermissionsAndPostType(\n\tsettingValue,\n\tsettingName,\n\tclientId, // eslint-disable-line\n\tblockName // eslint-disable-line\n) {\n\t// Bail if the examples are not enabled.\n\tif ( ! window.enableEditorFilters ) {\n\t\treturn settingValue;\n\t}\n\n\tconst { canUser } = select( 'core' );\n\tconst { getCurrentPostType } = select( 'core/editor' );\n\n\t// Check user permissions and get the current post type.\n\tconst canUserUpdateSettings = canUser( 'update', 'settings' );\n\tconst currentPostType = getCurrentPostType();\n\n\t// Disable block settings on these post types.\n\tconst disabledPostTypes = [\n\t\t'post',\n\t\t// Add additional post types here.\n\t];\n\n\t// Disable these block settings.\n\tconst disabledBlockSettings = [\n\t\t'border.color',\n\t\t'border.radius',\n\t\t'border.style',\n\t\t'border.width',\n\t\t// Add additional block settings here.\n\t];\n\n\tif (\n\t\t! canUserUpdateSettings &&\n\t\tdisabledPostTypes.includes( currentPostType ) &&\n\t\tdisabledBlockSettings.includes( settingName )\n\t) {\n\t\treturn false;\n\t}\n\n\treturn settingValue;\n}\n\naddFilter(\n\t'blockEditor.useSetting.before',\n\t'editor-curation-examples/useSetting.before/user-permissions-and-post-type',\n\trestrictBlockSettingsByUserPermissionsAndPostType\n);\n\n/**\n * If a 'core/button' block is within a 'core/cover' block, update the\n * color palette to only include 'Base\" and 'Contrast'. Also disable custom\n * colors and gradients.\n *\n * @see https://developer.wordpress.org/news/2023/05/curating-the-editor-experience-with-client-side-filters/\n *\n * @param {any}    settingValue The current value of the block setting.\n * @param {string} settingName  The name of the block setting to modify.\n * @param {string} clientId     The unique identifier for the block in the client.\n * @param {string} blockName    The name of the block type.\n *\n * @return {any} Returns the modified setting value or the original setting value.\n */\nfunction restrictButtonBlockSettingsByLocation(\n\tsettingValue,\n\tsettingName,\n\tclientId,\n\tblockName\n) {\n\t// Bail if the examples are not enabled.\n\tif ( ! window.enableEditorFilters ) {\n\t\treturn settingValue;\n\t}\n\n\tif ( blockName === 'core/button' ) {\n\t\tconst { getBlockParents, getBlockName } = select( 'core/block-editor' );\n\n\t\t// Get the block's parents and see if one is a 'core/cover' block.\n\t\tconst blockParents = getBlockParents( clientId, true );\n\t\tconst inCover = blockParents.some(\n\t\t\t( parentId ) => getBlockName( parentId ) === 'core/cover'\n\t\t);\n\n\t\t// Modify these block settings.\n\t\tconst modifiedBlockSettings = {\n\t\t\t'color.custom': false,\n\t\t\t'color.customGradient': false,\n\t\t\t'color.defaultGradients': false,\n\t\t\t'color.defaultPalette': false,\n\t\t\t'color.gradients.theme': [],\n\t\t\t'color.palette.theme': [\n\t\t\t\t{\n\t\t\t\t\tcolor: '#ffffff',\n\t\t\t\t\tname: 'Base',\n\t\t\t\t\tslug: 'base',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcolor: '#000000',\n\t\t\t\t\tname: 'Contrast',\n\t\t\t\t\tslug: 'contrast',\n\t\t\t\t},\n\t\t\t],\n\t\t\t// Add additional block settings here.\n\t\t};\n\n\t\tif ( inCover && modifiedBlockSettings.hasOwnProperty( settingName ) ) {\n\t\t\treturn modifiedBlockSettings[ settingName ];\n\t\t}\n\t}\n\n\treturn settingValue;\n}\n\naddFilter(\n\t'blockEditor.useSetting.before',\n\t'editor-curation-examples/useSetting.before/button-location',\n\trestrictButtonBlockSettingsByLocation\n);\n","/**\n * WordPress dependencies\n */\nimport domReady from '@wordpress/dom-ready';\nimport { getBlockTypes, unregisterBlockType } from '@wordpress/blocks';\n\n/**\n * Restrict allowed blocks in the Editor.\n */\nfunction restrictAllowedBlocks() {\n\n    const allowedBlocks = [\n        'core/block',\n        'core/button',\n        'core/buttons',\n        'core/code',\n        'core/column',\n        'core/columns',\n        'core/cover',\n        'core/gallery',\n        'core/group',\n        'core/heading',\n        'core/image',\n        'core/list',\n        'core/list-item',\n        'core/missing', // Needed for when a post contains a block type that is no longer supported.\n        'core/paragraph',\n        'core/spacer',\n    ];\n\n    getBlockTypes().forEach( function ( blockType ) {\n        if ( allowedBlocks.indexOf( blockType.name ) === -1 ) {\n            unregisterBlockType( blockType.name );\n        }\n    } );\n}\n\ndomReady( function () {\n    \n    // Bail if the examples are not enabled.\n\tif ( window.enableMiscCurations ) {\n        restrictAllowedBlocks();\n\t}\n} );\n","/**\n * WordPress dependencies\n */\nimport domReady from '@wordpress/dom-ready';\nimport { unregisterBlockStyle } from '@wordpress/blocks';\n\ndomReady( function () {\n\n\t// Only execute if the Notes Demo is enabled and you are editing a 'note'.\n\tif ( window.enableNotesDemo && 'note' === pagenow ) {\n\t\t// Provided by Core.\n\t\tunregisterBlockStyle( 'core/image', [ 'default', 'rounded' ] );\n\n\t\t// Provided by Twenty Twenty-Four.\n\t\tunregisterBlockStyle( 'core/list', [ 'default', 'checkmark' ] );\n\t\tunregisterBlockStyle( 'core/heading', [ 'default', 'asterisk' ] );\n\t}\n} );\n","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"domReady\"];","module.exports = window[\"wp\"][\"hooks\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import './examples/editor-filters/block-editor-use-setting-before';\nimport './examples/block-filters/blocks-register-block-type';\nimport './examples/notes-demo';\nimport './examples/misc-curations';\n"],"names":["addFilter","addBorderSupport","settings","name","window","enableBlockFilters","supports","Object","assign","__experimentalBorder","color","style","width","radius","__experimentalDefaultControls","modifyTypographyDefaults","typography","fontAppearance","fontSize","select","restrictColumnSpacingSettings","settingValue","settingName","clientId","blockName","enableEditorFilters","restrictHeadingTypographySettings","_getBlockAttributes$l","getBlockAttributes","headingLevel","level","modifiedBlockSettings","fluid","min","max","size","slug","hasOwnProperty","restrictBlockSettingsByUserPermissionsAndPostType","canUser","getCurrentPostType","canUserUpdateSettings","currentPostType","disabledPostTypes","disabledBlockSettings","includes","restrictButtonBlockSettingsByLocation","getBlockParents","getBlockName","blockParents","inCover","some","parentId","domReady","getBlockTypes","unregisterBlockType","restrictAllowedBlocks","allowedBlocks","forEach","blockType","indexOf","enableMiscCurations","unregisterBlockStyle","enableNotesDemo","pagenow"],"sourceRoot":""}